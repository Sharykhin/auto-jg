<?xml version="1.0" encoding="UTF-8"?>

<project name="Test" default="build" basedir=".">
    <property name="output" location="${basedir}/build/"/>

    <target name="build" depends="init, unit, reports, phpcs, phpmd, phpcpd, phploc, pdepend, phpdoc, jsdoc"></target>
    <!--<target name="build" depends="init, test, phpdoc, phpcb"></target>-->
    <!--<target name="build" depends="init, test"></target>-->

    <target name="init">
        <mkdir dir="${output}"/>
        <mkdir dir="${output}/pdepend/"/>
        <mkdir dir="${output}/docs/"/>
        <mkdir dir="${output}/docs/jsdoc/"/>
        <mkdir dir="${output}/docs/phpdoc"/>
        <mkdir dir="${output}/src/"/>
        <mkdir dir="${output}/logs/"/>
    </target>

    <!-- generate coverage report in tests/_log/coverage/index.html -->
    <target name="unit">
        <exec dir="${basedir}" executable="php" failonerror="false">
            <arg line=" codecept.phar run unit --coverage --xml --html" />
        </exec>
    </target>
    <!-- generate all reports (unit,functional,acceptance in tests/_log/report.html) -->
    <target name="reports">
        <exec dir="${basedir}" executable="php" failonerror="false">
            <arg line=" codecept.phar run --steps --xml --html" />
        </exec>
    </target>

    <!-- Standartization of code. File configuration is phpcs.xml -->
    <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer">
        <exec executable="phpcs" dir="${basedir}">
            <arg line=" --standard=${basedir}/phpcs.xml --report=checkstyle --report-file=${output}/logs/checkstyle.xml
                ${basedir}/src" />
        </exec>
    </target>

    <!-- messdetector show mistakes,errors and warning in code.File configuration is phpmd.xml -->
    <target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpmd">
            <arg line="
            ${basedir}/src xml  ${basedir}/phpmd.xml  --reportfile ${output}/logs/messdetector.xml
            " />
        </exec>
    </target>

    <!-- show copy paste cases. -->
    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd" dir="${basedir}">
            <arg line="
                 --log-pmd ${output}/phpcpd.xml
                 ${basedir}/src
            " />
        </exec>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg line=" --log-csv ${output}/logs/phploc.csv ${basedir}/src" />

        </exec>

    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg line="
                --jdepend-xml=${output}/pdepend/jdepend.xml
                --jdepend-chart=${output}/pdepend/dependencies.svg
                --overview-pyramid=${output}/pdepend/overview-pyramid.svg
                --ignore=tests
                ${basedir}/src
            " />
        </exec>
    </target>

    <!-- generate phpdoc. File configuration is phpdoc.xml -->
    <target name="phpdoc" description="Generate API documentation using phpDox">
        <exec executable="php" dir="${basedir}" failonerror="false">
            <arg line=" phpDocumentor.phar" />
        </exec>
    </target>



    <!-- generate API Javascript Documentation in build/docs/jsdoc -->
    <target name="jsdoc" description="Generate API JS documentation">
        <exec dir="${basedir}/" executable=".\node_modules\.bin\jsdoc" failonerror="false">
            <arg line=" web/js/index1.js
                        web/js/index2.js
                  -d ${output}/docs/jsdoc"/>
        </exec>
    </target>


</project>