<?xml version="1.0" encoding="UTF-8"?>

<project name="Test" default="build" basedir=".">
    <property name="output" location="${basedir}/build/"/>

    <target name="build" depends="init, unit,functional,acceptance,phpcs,phpmd,phpcpd,phploc,pdepend,phpdoc"></target>
    <!--<target name="build" depends="init, test, phpdoc, phpcb"></target>-->
    <!--<target name="build" depends="init, test"></target>-->

    <target name="init">
        <mkdir dir="${output}"/>
        <mkdir dir="${output}/phpcs/"/>
        <mkdir dir="${output}/pdepend/"/>
        <mkdir dir="${output}/CodeCoverage/"/>
        <mkdir dir="${output}/phpdoc/"/>
        <mkdir dir="${output}/phpdoc/api"/>
        <mkdir dir="${output}/src/"/>
        <mkdir dir="${output}/logs/"/>
        <mkdir dir="${output}/code-browser/"/>
    </target>

    <target name="test">
        <exec executable="phpunit" failonerror="true">
            <arg line="--coverage-clover ${output}/CodeCoverage/clover.xml
				--coverage-html ${output}/CodeCoverage/"/>
        </exec>
    </target>

    <target name="unit">
        <exec dir="${basedir}" executable="cmd" failonerror="false">
            <arg line="/c php codecept.phar run unit --coverage --xml --html" />
        </exec>
    </target>

    <target name="functional">
        <exec dir="${basedir}" executable="cmd" failonerror="false">
            <arg line="/c php codecept.phar run functional --steps" />
        </exec>
    </target>

    <target name="acceptance">
        <exec dir="${basedir}" executable="cmd" failonerror="false">
            <arg line="/c php codecept.phar run acceptance --steps" />
        </exec>
    </target>

    <target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpmd">
            <arg line="
            ${basedir}/src xml  ${basedir}/phpmd.xml  --reportfile ${output}/logs/messdetector.xml
            " />
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="cmd" dir="${basedir}">
            <arg line="/c phpcpd

                 --log-pmd ${output}/phpcpd.xml
                 ${basedir}/src
            " />
        </exec>
    </target>


    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="cmd">
            <arg line="/c pdepend 
                --jdepend-xml=${output}/pdepend/jdepend.xml
                --jdepend-chart=${output}/pdepend/dependencies.svg
                --overview-pyramid=${output}/pdepend/overview-pyramid.svg
                --ignore=tests
                ${basedir}/src
            " />
        </exec>
    </target>

    <target name="phpdoc" description="Generate API documentation using phpDox">
        <exec executable="cmd" dir="${basedir}" failonerror="false">
            <arg line="/c phpdoc
                -t ${output}/phpdoc/api
                -d ${basedir}/src
            "/>
        </exec>
    </target>

    <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer">
        <exec executable="cmd" dir="${basedir}">
            <arg line="/c phpcs --standard=${basedir}/phpcs.xml --report=checkstyle --report-file=${output}/logs/checkstyle.xml
                ${basedir}/src" />
        </exec>
    </target>

    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb">
            <arg value="--log" />
            <arg path="${output}/logs" />
            <arg value="--source" />
            <arg path="${output}/src" />
            <arg value="--output" />
            <arg path="${output}/code-browser" />
        </exec>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="cmd">
            <arg line="/c phploc --log-csv ${output}/logs/phploc.csv ${basedir}/src" />

        </exec>

    </target>

</project>
